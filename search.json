[{"path":"https://biometryhub.github.io/biometryassist/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 University Adelaide Biometry Hub Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://biometryhub.github.io/biometryassist/articles/installing-asreml-r.html","id":"note-licencing-asreml-r","dir":"Articles","previous_headings":"","what":"Note: Licencing ASReml-R","title":"Installing ASReml-R","text":"ASReml-R proprietary R package sold supported VSN International, requires licence code activate run. licence code checked validity via internet, may require opening network ports computer successfully activate. information licence requirements can obtained VSNi directly. developers biometryassist provide support ASReml-R via way bug reports software patches, problems ASReml-R software directed VSN International. installation instructions provided best-effort basis problems steps installation guide reported developers biometryassist.","code":""},{"path":"https://biometryhub.github.io/biometryassist/articles/installing-asreml-r.html","id":"licence","dir":"Articles","previous_headings":"Note: Licencing ASReml-R","what":"Licence key for University of Adelaide Staff and Students","title":"Installing ASReml-R","text":"June 2023, University Adelaide unlimited licence codes June 2026 university staff, students affiliates, thanks funding provided Grains Research Development Corporation, via Analytics Australian Grains Industry (AAGI) project. access University Adelaide licence key, please complete form: https://forms.office.com/Pages/ResponsePage.aspx?id=QN_Ns1SWJkqGoXecUfacSFFynOaV3gFMjBxPWBG-lVFUMzIyMjc3MjExVVk3WUFFOUkyNEJNMllaTC4u receive email licence key hold valid University Adelaide account.","code":""},{"path":"https://biometryhub.github.io/biometryassist/articles/installing-asreml-r.html","id":"package-method","dir":"Articles","previous_headings":"","what":"Package method","title":"Installing ASReml-R","text":"easiest way install ASReml-R use biometryassist package, includes automated install_asreml() function. function detect appropriate version R operating system, download matching version asreml. ’d rather install full package one function, can simply source function public GitHub repository instead, run function. See Function Method. biometryassist package CRAN, can installed using regular method: installed, load package ready use : package stay installed R sessions, need loaded library command time want use functions within .","code":"install.packages(\"biometryassist\") library(biometryassist)"},{"path":"https://biometryhub.github.io/biometryassist/articles/installing-asreml-r.html","id":"function-only-method","dir":"Articles","previous_headings":"","what":"Function Only Method","title":"Installing ASReml-R","text":"use function, without additional overhead biometryassist package, source following command: enable use function within current R session. close R, need run line enable use function. Note requires packages rlang curl installed, accomplished first line necessary.","code":"if(!require(rlang) | !require(curl)) install.packages(c(\"rlang\", \"curl\")) source(\"https://raw.githubusercontent.com/biometryhub/biometryassist/main/R/install_asreml.R\")"},{"path":"https://biometryhub.github.io/biometryassist/articles/installing-asreml-r.html","id":"installing-asreml-r","dir":"Articles","previous_headings":"","what":"Installing ASReml-R","title":"Installing ASReml-R","text":"install function available, simply run wait finish: following output typical:","code":"install_asreml() > install_asreml()  Downloading and installing ASReml-R. This may take some time, depending on internet speed...  * installing *source* package ‘asreml’ ... ** using staged installation ** R ** data *** moving datasets to lazyload DB ** inst ** byte-compile and prepare package for lazy loading ** help *** installing help indices ** building package indices ** testing if installed package can be loaded from temporary location ** checking absolute paths in shared objects and dynamic libraries ** testing if installed package can be loaded from final location ** testing if installed package keeps a record of temporary installation path * DONE (asreml) ASReml-R successfully installed!"},{"path":"https://biometryhub.github.io/biometryassist/articles/installing-asreml-r.html","id":"activating-asreml-r","dir":"Articles","previous_headings":"","what":"Activating ASReml-R","title":"Installing ASReml-R","text":"activate licence code asreml installed, run following commands (noting spelling license): prompted provide licence code, 16 character alpha-numeric code: valid licence code produce following output:","code":"library(asreml) asreml.license.activate() > asreml.license.activate() Please enter your activation code (RET or 0 to exit): AAA1-BBB2-CCC3-DDD4 License activation successful Licensed to <Orginisation or name> - <reference code(s)> Ref: <reference code> Expires: <expiry date>, <n> days."},{"path":"https://biometryhub.github.io/biometryassist/articles/installing-asreml-r.html","id":"additional-installation-options","dir":"Articles","previous_headings":"","what":"Additional Installation Options","title":"Installing ASReml-R","text":"install_asreml() function number additional arguments, can read documentation site. already ASReml-R installed, want update reinstall , can use update_asreml() function, install_asreml(force = TRUE).","code":"update_asreml() install_asreml(force = TRUE) # Equivalent to the above"},{"path":"https://biometryhub.github.io/biometryassist/articles/installing-asreml-r.html","id":"where-to-get-help","dir":"Articles","previous_headings":"","what":"Where To Get Help","title":"Installing ASReml-R","text":"errors problems encountered following instructions, problems using functions biometryassist ASReml-R, contact developers biometryassist problems licence activation, errors encountered using successfully installed licenced ASReml-R package, questions use ASReml-R package, contact VSNi. vignette last updated 2023-07-03.","code":""},{"path":"https://biometryhub.github.io/biometryassist/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sharon Nielsen. Author. Sam Rogers. Author, maintainer. Annie Conway. Author. University Adelaide. Copyright holder, funder.           https://adelaide.edu.au/ Grains Research Development Corporation. Copyright holder, funder.           https://grdc.com.au/","code":""},{"path":"https://biometryhub.github.io/biometryassist/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nielsen S, Rogers S, Conway (2025). biometryassist: Functions Assist Design Analysis Agronomic Experiments. R package version 1.2.2, https://biometryhub.github.io/biometryassist/.","code":"@Manual{,   title = {biometryassist: Functions to Assist Design and Analysis of Agronomic Experiments},   author = {Sharon Nielsen and Sam Rogers and Annie Conway},   year = {2025},   note = {R package version 1.2.2},   url = {https://biometryhub.github.io/biometryassist/}, }"},{"path":"https://biometryhub.github.io/biometryassist/index.html","id":"biometryassist","dir":"","previous_headings":"","what":"Functions to Assist Design and Analysis of Agronomic Experiments","title":"Functions to Assist Design and Analysis of Agronomic Experiments","text":"goal biometryassist provide functions aid Design Analysis Agronomic-style experiments easy access documentation helper functions, especially teaching concepts. package renamed version BiometryTraining longer maintained, can still found https://biometryhub.github.io/BiometryTraining/","code":""},{"path":"https://biometryhub.github.io/biometryassist/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions to Assist Design and Analysis of Agronomic Experiments","text":"version 1.0.0 biometryassist package now CRAN 🙌 means installation easy running:","code":"install.packages(\"biometryassist\")"},{"path":"https://biometryhub.github.io/biometryassist/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Functions to Assist Design and Analysis of Agronomic Experiments","text":"⚠ Warning: development version unstable liable change often CRAN version. may bugs fixed, may currently unknown bugs introduced. ⚠ Use following code install latest development version package.","code":"if(!require(\"remotes\")) install.packages(\"remotes\")  remotes::install_github(\"biometryhub/biometryassist@dev\")"},{"path":"https://biometryhub.github.io/biometryassist/index.html","id":"using-the-package","dir":"","previous_headings":"","what":"Using the package","title":"Functions to Assist Design and Analysis of Agronomic Experiments","text":"Load package start using : find package useful, please cite ! Type citation(\"biometryassist\") R console find .","code":"library(biometryassist)"},{"path":"https://biometryhub.github.io/biometryassist/index.html","id":"troubleshooting-installation","dir":"","previous_headings":"","what":"Troubleshooting Installation","title":"Functions to Assist Design and Analysis of Agronomic Experiments","text":"receive error package install rlang another package upgraded, easiest way deal uninstall package(s) updated (remove.packages(\"rlang\")). restart R, re-install install.packages(\"rlang\") try installing biometryassist .","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/autoplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate automatic plots for objects generated in biometryassist — autoplot","title":"Generate automatic plots for objects generated in biometryassist — autoplot","text":"Generate automatic plots objects generated biometryassist","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/autoplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate automatic plots for objects generated in biometryassist — autoplot","text":"","code":"autoplot(object, ...)  # S3 method for class 'mct' autoplot(   object,   size = 4,   label_height = 0.1,   rotation = 0,   axis_rotation = rotation,   label_rotation = rotation,   type = \"point\",   ... )  # S3 method for class 'design' autoplot(   object,   rotation = 0,   size = 4,   margin = FALSE,   palette = \"default\",   buffer = NULL,   row = NULL,   column = NULL,   block = NULL,   treatments = NULL,   ... )"},{"path":"https://biometryhub.github.io/biometryassist/reference/autoplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate automatic plots for objects generated in biometryassist — autoplot","text":"object object create plot . Currently objects multiple_comparisons() design() functions class \"mct\" \"design\" respectively supported. ... Arguments passed methods. size Increase decrease text size within plot treatment labels. Numeric default value 4. label_height Height text labels upper error bar plot. Default 0.1 (10%) difference upper lower error bars top error bar. Values > 1 interpreted actual value upper error bar. rotation Rotate x axis labels treatment group labels within plot. Allows easier reading long axis treatment labels. Number 0 360 (inclusive) - default 0 axis_rotation Enables rotation x axis independently group labels within plot. label_rotation Enables rotation treatment group labels independently x axis labels within plot. type string specifying type plot display. default 'point' display point estimate error bars. alternative, 'column' ('col'), display column graph error bars. margin Logical (default FALSE). value FALSE expand plot edges plotting area .e. remove white space plot axes. palette string specifying colour scheme use plotting vector custom colours use palette. Default equivalent \"Spectral\". Colour blind friendly palettes can also provided via options \"colour blind\" (\"color blind\", equivalent \"viridis\"), \"magma\", \"inferno\", \"plasma\", \"cividis\", \"rocket\", \"mako\" \"turbo\". palettes scales::brewer_pal() also possible. buffer string specifying buffer plots include plotting. Default NULL (buffers plotted). options \"edge\" (outer edge trial area), \"rows\" (rows), \"columns\" (columns), \"double row\" (buffer row side treatment row) \"double column\" (buffer row side treatment column). \"blocks\" (buffer around treatment block) implemented future release. row variable plot column object rows. column variable plot column object columns. block variable plot column object blocks. treatments variable plot column object treatments.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/autoplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate automatic plots for objects generated in biometryassist — autoplot","text":"ggplot2 object.","code":""},{"path":[]},{"path":"https://biometryhub.github.io/biometryassist/reference/autoplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate automatic plots for objects generated in biometryassist — autoplot","text":"","code":"dat.aov <- aov(Petal.Width ~ Species, data = iris) output <- multiple_comparisons(dat.aov, classify = \"Species\") autoplot(output, label_height = 0.5)  des.out <- design(type = \"crd\", treatments = c(1, 5, 10, 20),                   reps = 5, nrows = 4, ncols = 5, seed = 42, plot = FALSE) #> Source of Variation                     df #>  ============================================= #>  treatments                              3 #>  Residual                                16 #>  ============================================= #>  Total                                   19 autoplot(des.out)   # Colour blind friendly colours autoplot(des.out, palette = \"colour-blind\")   # Alternative colour scheme autoplot(des.out, palette = \"plasma\")   # Custom colour palette autoplot(des.out, palette = c(\"#ef746a\", \"#3fbfc5\", \"#81ae00\", \"#c37cff\"))   # Visualise different components of a split plot design des.out <- design(type = \"split\", treatments = c(\"A\", \"B\"), sub_treatments = 1:4, reps = 4, nrows = 8, ncols = 4, brows = 4, bcols = 2, seed = 42) #> Source of Variation                          df #>  ================================================== #>  Block stratum                                3 #>  -------------------------------------------------- #>  Whole plot stratum #>           treatments                          1 #>  Whole plot Residual                          3 #>  ================================================== #>  Subplot stratum #>           sub_treatments                      3 #>           treatments:sub_treatments           3 #>           Subplot Residual                   18 #>  ================================================== #>  Total                                       31   # Regular split plot autoplot(des.out)   # Show the wholeplot components autoplot(des.out, treatments = wholeplots)   # Display block level autoplot(des.out, treatments = block)"},{"path":"https://biometryhub.github.io/biometryassist/reference/biometryassist-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package biometryassist. — biometryassist-deprecated","title":"Deprecated functions in package biometryassist. — biometryassist-deprecated","text":"functions listed deprecated removed future. possible, alternative functions similar functionality also mentioned. Help pages deprecated functions available help(\"<function>-deprecated\").","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/biometryassist-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in package biometryassist. — biometryassist-deprecated","text":"","code":"resplt(   model.obj,   shapiro = TRUE,   call = FALSE,   label.size = 10,   axes.size = 10,   call.size = 9,   mod.obj )"},{"path":"https://biometryhub.github.io/biometryassist/reference/biometryassist-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated functions in package biometryassist. — biometryassist-deprecated","text":"return value. list containing ggplot2 objects diagnostic plots. resplt, use resplot().","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/biometryassist-deprecated.html","id":"resplt","dir":"Reference","previous_headings":"","what":"resplt","title":"Deprecated functions in package biometryassist. — biometryassist-deprecated","text":"Residual plots linear models.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/biometryassist.html","id":null,"dir":"Reference","previous_headings":"","what":"biometryassist: Functions to Assist Design and Analysis of Agronomic Experiments — biometryassist","title":"biometryassist: Functions to Assist Design and Analysis of Agronomic Experiments — biometryassist","text":"Provides functions aid design analysis agronomic agricultural experiments easy access documentation helper functions, especially users learning concepts. required functionality, package enhances `asreml` package provides computationally efficient algorithm fitting mixed models using Residual Maximum Likelihood. commercial package can purchased 'asreml-R' 'VSNi' https://vsni.co.uk/, supply zip file local installation/updating (see https://asreml.kb.vsni.co.uk/).","code":""},{"path":[]},{"path":"https://biometryhub.github.io/biometryassist/reference/biometryassist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"biometryassist: Functions to Assist Design and Analysis of Agronomic Experiments — biometryassist","text":"Maintainer: Sam Rogers biometrytraining@adelaide.edu.au Authors: Sharon Nielsen biometrytraining@adelaide.edu.au Annie Conway biometrytraining@adelaide.edu.au contributors: University Adelaide (https://adelaide.edu.au/) [copyright holder, funder] Grains Research Development Corporation (https://grdc.com.au/) [copyright holder, funder]","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/compare_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compare package version for mocking — compare_version","title":"Function to compare package version for mocking — compare_version","text":"Function compare package version mocking","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/compare_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compare package version for mocking — compare_version","text":"","code":"compare_version(a, b)"},{"path":"https://biometryhub.github.io/biometryassist/reference/compare_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compare package version for mocking — compare_version","text":", b Character strings representing package version numbers.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/compare_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to compare package version for mocking — compare_version","text":"Numeric. 0 numbers equal, -1 b later 1 later","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/create_buffers.html","id":null,"dir":"Reference","previous_headings":"","what":"Create buffers for design plots — create_buffers","title":"Create buffers for design plots — create_buffers","text":"Create buffers design plots","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/create_buffers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create buffers for design plots — create_buffers","text":"","code":"create_buffers(design, type, blocks = FALSE)"},{"path":"https://biometryhub.github.io/biometryassist/reference/create_buffers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create buffers for design plots — create_buffers","text":"design data frame design. type type buffer. One edge, row, column, double row, double column, block (coming soon). blocks design data frame contain blocks?","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/create_buffers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create buffers for design plots — create_buffers","text":"original data frame, updated include buffers","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/create_mac_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the folder MacOS needs for licensing — create_mac_folder","title":"Create the folder MacOS needs for licensing — create_mac_folder","text":"Create folder MacOS needs licensing","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/create_mac_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the folder MacOS needs for licensing — create_mac_folder","text":"","code":"create_mac_folder()"},{"path":"https://biometryhub.github.io/biometryassist/reference/create_mac_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the folder MacOS needs for licensing — create_mac_folder","text":"logical; TRUE folder successfully created, otherwise error","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/des_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a graph of design layout, skeletal ANOVA table and data frame with complete design — des_info","title":"Produce a graph of design layout, skeletal ANOVA table and data frame with complete design — des_info","text":"Produce graph design layout, skeletal ANOVA table data frame complete design","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/des_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a graph of design layout, skeletal ANOVA table and data frame with complete design — des_info","text":"","code":"des_info(   design.obj,   nrows,   ncols,   brows = NA,   bcols = NA,   byrow = TRUE,   fac.names = NULL,   fac.sep = c(\"\", \" \"),   plot = TRUE,   rotation = 0,   size = 4,   margin = FALSE,   save = FALSE,   savename = paste0(design.obj$parameters$design, \"_design\"),   plottype = \"pdf\",   return.seed = TRUE,   quiet = FALSE,   ... )"},{"path":"https://biometryhub.github.io/biometryassist/reference/des_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a graph of design layout, skeletal ANOVA table and data frame with complete design — des_info","text":"design.obj agricolae design object. nrows number rows design. ncols number columns design. brows RCBD . number rows block. bcols RCBD . number columns block. byrow split-plot . Logical (default: TRUE). Provides way arrange plots within whole-plots multiple possible arrangements. fac.names Allows renaming level factorial designs (.e. using agricolae::design.ab()) passing (optionally named) vectors new labels applied factors within list. See examples details information. fac.sep separator used fac.names. Used combine factorial design levels. vector 2 levels supplied, first separates factor levels label, second separates different factors. plot Logical (default TRUE). TRUE, display plot generated design. plot can always produced later using autoplot(). rotation Rotate text output Treatments within plot. Allows easier reading long treatment labels. Takes positive negative values number degrees rotation horizontal. size Increase decrease text size within plot treatment labels. Numeric default value 4. margin Logical (default FALSE). Setting TRUE add margin (white space) plot axes. save One FALSE (default)/\"none\", TRUE/\"\", \"plot\" \"workbook\". Specifies output save. savename filename design saved . Default type design combined \"_design\". plottype type file save plot . Usually one \"pdf\", \"png\", \"jpg\". See ggplot2::ggsave() possible options. return.seed Logical (default TRUE). Output seed used design? quiet Logical (default FALSE). Return objects without printing output. ... Additional parameters passed ggplot2::ggsave() saving plot.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/des_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a graph of design layout, skeletal ANOVA table and data frame with complete design — des_info","text":"list containing data frame complete design, ggplot object plot layout, seed (return.seed = TRUE), satab object, allowing repeat output satab table via cat(output$satab).","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/des_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Produce a graph of design layout, skeletal ANOVA table and data frame with complete design — des_info","text":"save = TRUE (\"\"), plot workbook saved current working directory, filename given savename. one either \"plot\" \"workbook\" specified, output saved. save = FALSE (default, equivalently \"none\"), nothing output. fac.names can supplied provide intuitive names factors levels factorial designs. specified list format, example fac.names = list(A_names = c(\"\", \"b\", \"c\"), B_names = c(\"x\", \"y\", \"z\")). result design output column named A_names levels , b, c another named B_names levels x, y, z. first two elements list used. fac.sep single element (e.g. \"\"), used separate factor labels (e.g. A_1_B_1). two elements (e.g. c(\"\", \"\")), first element separates factor names levels, second level separates two factors (e.g. A1_B1). ... allows extra arguments passed ggsave output plot. details possible arguments can found  ggplot2::ggsave().","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/des_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a graph of design layout, skeletal ANOVA table and data frame with complete design — des_info","text":"","code":"library(agricolae)  # Completely Randomised Design trt <- c(1, 5, 10, 20) rep <- 5 outdesign <- design.crd(trt = trt, r = rep, seed = 42) des.out <- des_info(design.obj = outdesign, nrows = 4, ncols = 5) #> Source of Variation                     df #>  ============================================= #>  trt                                     3 #>  Residual                                16 #>  ============================================= #>  Total                                   19   # Randomised Complete Block Design trt <- LETTERS[1:11] rep <- 4 outdesign <- design.rcbd(trt = trt, r = rep, seed = 42) des.out <- des_info(   design.obj = outdesign, nrows = 11,   ncols = 4, brows = 11, bcols = 1 ) #> Source of Variation                     df #>  ============================================= #>  Block stratum                           3 #>  --------------------------------------------- #>  trt                                     10 #>  Residual                                30 #>  ============================================= #>  Total                                   43   # Latin Square Design trt <- c(\"S1\", \"S2\", \"S3\", \"S4\") outdesign <- design.lsd(trt) des.out <- des_info(design.obj = outdesign, nrows = 4, ncols = 4) #> Source of Variation                     df #>  ============================================= #>  Row                                     3 #>  Column                                  3 #>  trt                                     3 #>  Residual                                6 #>  ============================================= #>  Total                                   15   # Factorial Design (Crossed, Completely Randomised) trt <- c(3, 2) # Factorial 3 x 2 rep <- 3 outdesign <- design.ab(trt, r = rep, design = \"crd\") des.out <- des_info(design.obj = outdesign, nrows = 6, ncols = 3) #> Source of Variation                     df #>  ============================================= #>  A                                       2 #>  B                                       1 #>  A:B                                     2 #>  Residual                                12 #>  ============================================= #>  Total                                   17   # Factorial Design (Crossed, Completely Randomised), renaming factors trt <- c(3, 2) # Factorial 3 x 2 rep <- 3 outdesign <- design.ab(trt, r = rep, design = \"crd\") des.out <- des_info(design.obj = outdesign, nrows = 6, ncols = 3,                     fac.names = list(N = c(50, 100, 150),                                      Water = c(\"Irrigated\", \"Rain-fed\"))) #> Source of Variation                     df #>  ============================================= #>  N                                       2 #>  Water                                   1 #>  N:Water                                 2 #>  Residual                                12 #>  ============================================= #>  Total                                   17   # Factorial Design (Nested, Latin Square) trt <- c(\"A1\", \"A2\", \"A3\", \"A4\", \"B1\", \"B2\", \"B3\") outdesign <- design.lsd(trt) des.out <- des_info(design.obj = outdesign, nrows = 7, ncols = 7) #> Source of Variation                     df #>  ============================================= #>  Row                                     6 #>  Column                                  6 #>  trt                                     6 #>  Residual                                30 #>  ============================================= #>  Total                                   48   # Split plot design trt1 <- c(\"A\", \"B\") trt2 <- 1:4 rep <- 4 outdesign <- design.split(trt1, trt2, r = rep) des.out <- des_info(design.obj = outdesign, nrows = 8, ncols = 4, brows = 4, bcols = 2) #> Source of Variation                          df #>  ================================================== #>  Block stratum                                3 #>  -------------------------------------------------- #>  Whole plot stratum #>           trt1                                1 #>  Whole plot Residual                          3 #>  ================================================== #>  Subplot stratum #>           trt2                                3 #>           trt1:trt2                           3 #>           Subplot Residual                   18 #>  ================================================== #>  Total                                       31"},{"path":"https://biometryhub.github.io/biometryassist/reference/design.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a complete experimental design with graph of design layout and skeletal ANOVA table — design","title":"Create a complete experimental design with graph of design layout and skeletal ANOVA table — design","text":"Create complete experimental design graph design layout skeletal ANOVA table","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a complete experimental design with graph of design layout and skeletal ANOVA table — design","text":"","code":"design(   type,   treatments,   reps,   nrows,   ncols,   brows = NA,   bcols = NA,   byrow = TRUE,   sub_treatments = NULL,   fac.names = NULL,   fac.sep = c(\"\", \" \"),   plot = TRUE,   rotation = 0,   size = 4,   margin = FALSE,   save = FALSE,   savename = paste0(type, \"_design\"),   plottype = \"pdf\",   seed = TRUE,   quiet = FALSE,   ... )"},{"path":"https://biometryhub.github.io/biometryassist/reference/design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a complete experimental design with graph of design layout and skeletal ANOVA table — design","text":"type type design. Supported design types crd, rcbd, lsd, crossed:<type> <type> one previous types, split. See Details information. treatments vector containing treatment names labels. reps number replicates. Ignored Latin Square Designs. nrows number rows design. ncols number columns design. brows RCBD Split Plot designs. number rows block. bcols RCBD Split Plot designs. number columns block. byrow split-plot . Logical (default TRUE). Provides way arrange plots within whole-plots multiple possible arrangements. sub_treatments vector treatments sub-plots split plot design. fac.names Allows renaming level factorial designs (.e. using agricolae::design.ab()) passing (optionally named) vectors new labels applied factors within list. See examples details information. fac.sep separator used fac.names. Used combine factorial design levels. vector 2 levels supplied, first separates factor levels label, second separates different factors. plot Logical (default TRUE). TRUE, display plot generated design. plot can always produced later using autoplot(). rotation Rotate text output Treatments within plot. Allows easier reading long treatment labels. Takes positive negative values number degrees rotation horizontal. size Increase decrease text size within plot treatment labels. Numeric default value 4. margin Logical (default FALSE). Expand plot edges plotting area .e. remove white space plot axes. save One FALSE (default)/\"none\", TRUE/\"\", \"plot\" \"workbook\". Specifies output save. savename file name design saved . Default type design combined \"_design\". plottype type file save plot . Usually one \"pdf\", \"png\", \"jpg\". See ggplot2::ggsave() possible options. seed Logical (default TRUE). TRUE, return seed used generate design. numeric value, use value seed design. quiet Logical (default FALSE). Hide output. ... Additional parameters passed ggplot2::ggsave() saving plot.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a complete experimental design with graph of design layout and skeletal ANOVA table — design","text":"list containing data frame complete design ($design), ggplot object plot layout ($plot.des), seed ($seed, return.seed = TRUE), satab object ($satab), allowing repeat output satab table via cat(output$satab).","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/design.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a complete experimental design with graph of design layout and skeletal ANOVA table — design","text":"designs currently supported type Completely Randomised designs (crd), Randomised Complete Block designs (rcbd), Latin Square Designs (lsd), Factorial crossed structure (use crossed:<type> <type> one previous types e.g. crossed:crd) Split Plot designs (split). Nested factorial designs supported manual setup, see Examples. save = TRUE (\"\"), plot workbook saved current working directory, filename given savename. one either \"plot\" \"workbook\" specified, output saved. save = FALSE (default, equivalently \"none\"), nothing output. fac.names can supplied provide intuitive names factors levels factorial split plot designs. can specified list format, example fac.names = list(A_names = c(\"\", \"b\", \"c\"), B_names = c(\"x\", \"y\", \"z\")). result design output column named A_names levels , b, c another named B_names levels x, y, z. Labels can also supplied character vector (e.g. c(\"\", \"B\")) result treatment column names renamed. first two elements list used, except case 3-way factorial design. ... allows extra arguments passed ggsave() output plot. details possible arguments can found  ggplot2::ggsave().","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a complete experimental design with graph of design layout and skeletal ANOVA table — design","text":"","code":"# Completely Randomised Design des.out <- design(type = \"crd\", treatments = c(1, 5, 10, 20),                   reps = 5, nrows = 4, ncols = 5, seed = 42) #> Source of Variation                     df #>  ============================================= #>  treatments                              3 #>  Residual                                16 #>  ============================================= #>  Total                                   19   # Randomised Complete Block Design des.out <- design(\"rcbd\", treatments = LETTERS[1:11], reps = 4,                   nrows = 11, ncols = 4, brows = 11, bcols = 1, seed = 42) #> Source of Variation                     df #>  ============================================= #>  Block stratum                           3 #>  --------------------------------------------- #>  treatments                              10 #>  Residual                                30 #>  ============================================= #>  Total                                   43   # Latin Square Design # Doesn't require reps argument des.out <- design(type = \"lsd\", c(\"S1\", \"S2\", \"S3\", \"S4\"),                   nrows = 4, ncols = 4, seed = 42) #> Source of Variation                     df #>  ============================================= #>  Row                                     3 #>  Column                                  3 #>  treatments                              3 #>  Residual                                6 #>  ============================================= #>  Total                                   15   # Factorial Design (Crossed, Completely Randomised) des.out <- design(type = \"crossed:crd\", treatments = c(3, 2),                   reps = 3, nrows = 6, ncols = 3, seed = 42) #> Source of Variation                     df #>  ============================================= #>  A                                       2 #>  B                                       1 #>  A:B                                     2 #>  Residual                                12 #>  ============================================= #>  Total                                   17   # Factorial Design (Crossed, Completely Randomised), renaming factors des.out <- design(type = \"crossed:crd\", treatments = c(3, 2),                   reps = 3, nrows = 6, ncols = 3, seed = 42,                   fac.names = list(N = c(50, 100, 150),                                    Water = c(\"Irrigated\", \"Rain-fed\"))) #> Source of Variation                     df #>  ============================================= #>  N                                       2 #>  Water                                   1 #>  N:Water                                 2 #>  Residual                                12 #>  ============================================= #>  Total                                   17   # Factorial Design (Crossed, Randomised Complete Block Design), # changing separation between factors des.out <- design(type = \"crossed:rcbd\", treatments = c(3, 2),                   reps = 3, nrows = 6, ncols = 3,                   brows = 6, bcols = 1,                   seed = 42, fac.sep = c(\":\", \"_\")) #> Source of Variation                     df #>  ============================================= #>  Block stratum                           2 #>  --------------------------------------------- #>  A                                       2 #>  B                                       1 #>  A:B                                     2 #>  Residual                                10 #>  ============================================= #>  Total                                   17   # Factorial Design (Nested, Latin Square) trt <- c(\"A1\", \"A2\", \"A3\", \"A4\", \"B1\", \"B2\", \"B3\") des.out <- design(type = \"lsd\", treatments = trt,                   nrows = 7, ncols = 7, seed = 42) #> Source of Variation                     df #>  ============================================= #>  Row                                     6 #>  Column                                  6 #>  treatments                              6 #>  Residual                                30 #>  ============================================= #>  Total                                   48   # Split plot design des.out <- design(type = \"split\", treatments = c(\"A\", \"B\"), sub_treatments = 1:4,                   reps = 4, nrows = 8, ncols = 4, brows = 4, bcols = 2, seed = 42) #> Source of Variation                          df #>  ================================================== #>  Block stratum                                3 #>  -------------------------------------------------- #>  Whole plot stratum #>           treatments                          1 #>  Whole plot Residual                          3 #>  ================================================== #>  Subplot stratum #>           sub_treatments                      3 #>           treatments:sub_treatments           3 #>           Subplot Residual                   18 #>  ================================================== #>  Total                                       31   # Alternative arrangement of the same design as above des.out <- design(type = \"split\", treatments = c(\"A\", \"B\"), sub_treatments = 1:4,                   reps = 4, nrows = 8, ncols = 4, brows = 4, bcols = 2,                   byrow = FALSE, seed = 42) #> Source of Variation                          df #>  ================================================== #>  Block stratum                                3 #>  -------------------------------------------------- #>  Whole plot stratum #>           treatments                          1 #>  Whole plot Residual                          3 #>  ================================================== #>  Subplot stratum #>           sub_treatments                      3 #>           treatments:sub_treatments           3 #>           Subplot Residual                   18 #>  ================================================== #>  Total                                       31"},{"path":"https://biometryhub.github.io/biometryassist/reference/get_r_os.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the version of R and OS — get_r_os","title":"Get the version of R and OS — get_r_os","text":"Get version R OS","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/get_r_os.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the version of R and OS — get_r_os","text":"","code":"get_r_os()"},{"path":"https://biometryhub.github.io/biometryassist/reference/get_r_os.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the version of R and OS — get_r_os","text":"list version R OS standard format","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/get_version_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Get released versions of ASReml-R in lookup table — get_version_table","title":"Get released versions of ASReml-R in lookup table — get_version_table","text":"Get released versions ASReml-R lookup table","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/get_version_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get released versions of ASReml-R in lookup table — get_version_table","text":"","code":"get_version_table(   url =     \"https://asreml.kb.vsni.co.uk/asreml-r-4-download-success/?site_reference=VS9AF20\" )"},{"path":"https://biometryhub.github.io/biometryassist/reference/get_version_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get released versions of ASReml-R in lookup table — get_version_table","text":"list data frames containing version number release date released ASReml-R versions comparison","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/handle_deprecated_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle deprecated parameters — handle_deprecated_param","title":"Handle deprecated parameters — handle_deprecated_param","text":"Simple internal function warn deprecated parameters","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/handle_deprecated_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle deprecated parameters — handle_deprecated_param","text":"","code":"handle_deprecated_param(   old_param,   new_param = NULL,   custom_msg = NULL,   call_env = parent.frame() )"},{"path":"https://biometryhub.github.io/biometryassist/reference/handle_deprecated_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle deprecated parameters — handle_deprecated_param","text":"old_param Name deprecated parameter new_param Name replacement parameter NULL parameter removed custom_msg Optional custom message append warning call_env Environment check deprecated parameter","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/handle_deprecated_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle deprecated parameters — handle_deprecated_param","text":"Nothing, called side effects (warnings)","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/heat_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a heatmap of variables in a grid layout. — heat_map","title":"Produce a heatmap of variables in a grid layout. — heat_map","text":"function plots heatmap variables grid layout, optionally grouping .","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/heat_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a heatmap of variables in a grid layout. — heat_map","text":"","code":"heat_map(   data,   value,   x_axis,   y_axis,   grouping = NULL,   raster = TRUE,   smooth = FALSE,   palette = \"default\",   ... )"},{"path":"https://biometryhub.github.io/biometryassist/reference/heat_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a heatmap of variables in a grid layout. — heat_map","text":"data data frame containing data plotted. value column data, containing values vary space produces colours. x_axis column data use x axis data. y_axis column data use y axis data. grouping optional grouping variable facet plot . raster Logical (default: TRUE). TRUE uses ggplot2::geom_raster() speed. work grid irregular. smooth Logical (default: FALSE). raster TRUE, interpolation can applied across grid obtain smoothed grid. Ignored raster FALSE. palette Colour palette use. default use viridis (colour-blind friendly) palette. palettes available can seen grDevices::hcl.pals(). ... arguments passed ggplot2::facet_wrap()","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/heat_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a heatmap of variables in a grid layout. — heat_map","text":"ggplot2 object.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/heat_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a heatmap of variables in a grid layout. — heat_map","text":"","code":"set.seed(42) dat <- expand.grid(x = 1:5, y = 1:6) dat$value <- rnorm(30) dat$groups <- sample(rep(LETTERS[1:6], times = 5))  heat_map(dat, value, x, y)   # Column names can be quoted, but don't need to be. heat_map(dat, \"value\", \"x\", \"y\", \"groups\")   # Different palettes are available heat_map(dat, value, x, y, palette = \"Spectral\")   # Arguments in ... are passed through to facet_wrap heat_map(dat, value, x, y, groups, labeller = ggplot2:::label_both)  heat_map(dat, value, x, y, groups, scales = \"free_y\")  heat_map(dat, value, x, y, groups, nrow = 1)"},{"path":"https://biometryhub.github.io/biometryassist/reference/install_asreml.html","id":null,"dir":"Reference","previous_headings":"","what":"Install or update the ASReml-R package — install_asreml","title":"Install or update the ASReml-R package — install_asreml","text":"Helper functions installing updating ASReml-R package, intended reduce difficulty finding correct version operating system R version.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/install_asreml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install or update the ASReml-R package — install_asreml","text":"","code":"install_asreml(   library = .libPaths()[1],   quiet = FALSE,   force = FALSE,   keep_file = FALSE,   check_version = TRUE )  update_asreml(...)"},{"path":"https://biometryhub.github.io/biometryassist/reference/install_asreml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install or update the ASReml-R package — install_asreml","text":"library Library location install ASReml-R. Uses first option .libPaths() default. quiet Logical (default FALSE). package installed quietly? force Logical (default FALSE). Force ASReml-R install. Useful upgrading already installed. keep_file downloaded asreml package file kept? Default FALSE. TRUE downloads current directory. file path can also provided save another directory. See Details information. check_version Logical (default TRUE). function check newer version asreml available attempting download install? ... arguments passed install_asreml()","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/install_asreml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install or update the ASReml-R package — install_asreml","text":"Silently returns TRUE asreml installed successfully already present, FALSE otherwise. Optionally prints confirmation message success.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/install_asreml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install or update the ASReml-R package — install_asreml","text":"ASReml-R package file downloaded shortlink, keep_file TRUE, package archive file saved current directory. valid path provided keep_file, file saved path, directories assumed exist created. keep_file specify existing, valid path, error shown package installation.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/install_asreml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install or update the ASReml-R package — install_asreml","text":"","code":"if (FALSE) { # \\dontrun{ # Example 1: download and install asreml install_asreml()  # Example 2: install asreml and save file for later install_asreml(keep_file = TRUE) } # }"},{"path":"https://biometryhub.github.io/biometryassist/reference/logl_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Conduct a log-likelihood test for comparing terms in ASReml-R models — logl_test","title":"Conduct a log-likelihood test for comparing terms in ASReml-R models — logl_test","text":"Conduct log-likelihood test comparing terms ASReml-R models","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/logl_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conduct a log-likelihood test for comparing terms in ASReml-R models — logl_test","text":"","code":"logl_test(   model.obj,   rand.terms = NULL,   resid.terms = NULL,   decimals = 3,   numeric = FALSE,   quiet = FALSE )"},{"path":"https://biometryhub.github.io/biometryassist/reference/logl_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conduct a log-likelihood test for comparing terms in ASReml-R models — logl_test","text":"model.obj ASReml-R model object rand.terms Random terms model. Default NULL. resid.terms Residual terms model. Default NULL. decimals Controls rounding decimal places output. Default 3 decimal places. numeric Return p-values numeric? Default characters, small values shown less small number. See details . quiet Logical (default: FALSE). Hide warnings messages?","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/logl_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conduct a log-likelihood test for comparing terms in ASReml-R models — logl_test","text":"dataframe containing results test.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/logl_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conduct a log-likelihood test for comparing terms in ASReml-R models — logl_test","text":"Typically p-values 0, usually just threshold accuracy calculation probability.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/logl_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conduct a log-likelihood test for comparing terms in ASReml-R models — logl_test","text":"","code":"if (FALSE) { # \\dontrun{ library(asreml) dat <- asreml::oats dat <- dat[order(dat$Row, dat$Column),]  #Fit ASReml Model model.asr <- asreml(yield ~ Nitrogen + Variety + Nitrogen:Variety,                     random = ~ Blocks + Blocks:Wplots,                     residual = ~ ar1(Row):ar1(Column),                     data = dat) oats.logl <- logl_test(   model.obj = model.asr, rand.terms = c(\"Blocks\", \"Blocks:Wplots\"),   resid.terms = c(\"ar1(Row)\", \"ar1(Column)\") ) oats.logl } # }"},{"path":"https://biometryhub.github.io/biometryassist/reference/manage_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage the downloaded file — manage_file","title":"Manage the downloaded file — manage_file","text":"Manage downloaded file","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/manage_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage the downloaded file — manage_file","text":"","code":"manage_file(save_file, keep_file, filename)"},{"path":"https://biometryhub.github.io/biometryassist/reference/manage_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage the downloaded file — manage_file","text":"logical; TRUE file successfully moved, FALSE otherwise","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/multiple_comparisons.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Multiple Comparison Tests on a statistical model — multiple_comparisons","title":"Perform Multiple Comparison Tests on a statistical model — multiple_comparisons","text":"function comparing ranking predicted means Tukey's Honest Significant Difference (HSD) Test.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/multiple_comparisons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Multiple Comparison Tests on a statistical model — multiple_comparisons","text":"","code":"multiple_comparisons(   model.obj,   classify,   sig = 0.05,   int.type = \"ci\",   trans = NA,   offset = NA,   power = NA,   decimals = 2,   descending = FALSE,   groups = TRUE,   plot = FALSE,   label_height = 0.1,   rotation = 0,   save = FALSE,   savename = \"predicted_values\",   order,   pred.obj,   pred,   ... )"},{"path":"https://biometryhub.github.io/biometryassist/reference/multiple_comparisons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Multiple Comparison Tests on a statistical model — multiple_comparisons","text":"model.obj ASReml-R aov model object. likely also work lme (nlme::lme()), lmerMod (lme4::lmer()) models well. classify Name predictor variable string. sig significance level, numeric 0 1. Default 0.05. int.type type confidence interval calculate. One ci, 1se 2se. Default ci. trans Transformation applied response variable. One log, sqrt, logit, power inverse. Default NA. offset Numeric offset applied response variable prior transformation. Default NA. Use 0 offset applied transformed data. See Details information. power Numeric power applied response variable power transformation. Default NA. See Details information. decimals Controls rounding decimal places output. Default 2 decimal places. descending Logical (default FALSE). Order output sorted predicted value. TRUE, largest first, smallest last. groups Logical (default TRUE). TRUE, significance letter groupings calculated displayed. can get overwhelming large numbers comparisons, can turned setting FALSE. plot Automatically produce plot output multiple comparison test? Default FALSE. maintained backwards compatibility, preferred method now use autoplot(<multiple_comparisons output>). See autoplot.mct() details. label_height Height text labels upper error bar plot. Default 0.1 (10%) difference upper lower error bars top error bar. rotation Rotate text output Treatments within plot. Allows easier reading long treatment labels. Number 0 360 (inclusive) - default 0 save Logical (default FALSE). Save predicted values csv file? savename file name predicted values saved . Default predicted_values. order Deprecated. Use descending instead. pred.obj Deprecated. Predicted values calculated within function version 1.0.1 onwards. pred Deprecated. Use classify instead. ... arguments passed predict.asreml().","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/multiple_comparisons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Multiple Comparison Tests on a statistical model — multiple_comparisons","text":"list containing data frame predicted means, standard errors, confidence interval upper lower bounds, significant group allocations (named predicted_values), well plot visually displaying predicted values (named predicted_plot). predicted values aliased, warning printed, aliased treatment levels returned output (named aliased).","code":""},{"path":[]},{"path":"https://biometryhub.github.io/biometryassist/reference/multiple_comparisons.html","id":"offset","dir":"Reference","previous_headings":"","what":"Offset","title":"Perform Multiple Comparison Tests on a statistical model — multiple_comparisons","text":"transformations require data small offset applied, otherwise cause errors (example taking log 0, square root negative values). order correctly reverse offset, trans argument supplied, value also supplied offset argument. default function assumes offset required transformation, implying value 0 offset argument. offset value provided, use value provided model, inverse. example, adding 0.1 values log transformation, add 0.1 offset argument.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/multiple_comparisons.html","id":"power","dir":"Reference","previous_headings":"","what":"Power","title":"Perform Multiple Comparison Tests on a statistical model — multiple_comparisons","text":"power argument allows specification arbitrary powers back transformed, used attempt improve normality residuals.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/multiple_comparisons.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform Multiple Comparison Tests on a statistical model — multiple_comparisons","text":"Jørgensen, E. & Pedersen, . R. (1997). Obtain Nasty Standard Errors Transformed Data - Used. https://pure.au.dk/portal/en/publications/--obtain--nasty-standard-errors--transformed-data-","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/multiple_comparisons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Multiple Comparison Tests on a statistical model — multiple_comparisons","text":"","code":"# Fit aov model model <- aov(Petal.Length ~ Species, data = iris)  # Display the ANOVA table for the model anova(model) #> Analysis of Variance Table #>  #> Response: Petal.Length #>            Df Sum Sq Mean Sq F value    Pr(>F)     #> Species     2 437.10 218.551  1180.2 < 2.2e-16 *** #> Residuals 147  27.22   0.185                       #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  # Determine ranking and groups according to Tukey's Test pred.out <- multiple_comparisons(model, classify = \"Species\")  # Display the predicted values table pred.out #>      Species predicted.value std.error  df groups  ci  low   up #> 1     setosa            1.46      0.06 147      a 0.1 1.36 1.56 #> 2 versicolor            4.26      0.06 147      b 0.1 4.16 4.36 #> 3  virginica            5.55      0.06 147      c 0.1 5.45 5.65  # Show the predicted values plot autoplot(pred.out, label_height = 0.5)    # AOV model example with transformation my_iris <- iris my_iris$Petal.Length <- exp(my_iris$Petal.Length) # Create exponential response exp_model <- aov(Petal.Length ~ Species, data = my_iris)  resplot(exp_model) # Residual plot shows problems   # Fit a new model using a log transformation of the response log_model <- aov(log(Petal.Length) ~ Species, data = my_iris)  resplot(log_model) # Looks much better   # Display the ANOVA table for the model anova(log_model) #> Analysis of Variance Table #>  #> Response: log(Petal.Length) #>            Df Sum Sq Mean Sq F value    Pr(>F)     #> Species     2 437.10 218.551  1180.2 < 2.2e-16 *** #> Residuals 147  27.22   0.185                       #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  # Back transform, because the \"original\" data was exponential pred.out <- multiple_comparisons(log_model, classify = \"Species\",                                    trans = \"log\") #> Warning: Offset value assumed to be 0. Change with `offset` argument.  # Display the predicted values table pred.out #>      Species predicted.value std.error  df groups  ci PredictedValue ApproxSE #> 1     setosa            1.46      0.06 147      a 0.1           4.31     0.26 #> 2 versicolor            4.26      0.06 147      b 0.1          70.81     4.31 #> 3  virginica            5.55      0.06 147      c 0.1         257.75    15.69 #>      low     up #> 1   3.90   4.77 #> 2  64.02  78.31 #> 3 233.05 285.07  # Show the predicted values plot autoplot(pred.out, label_height = 15)   if (FALSE) { # \\dontrun{ # ASReml-R Example library(asreml)  #Fit ASReml Model model.asr <- asreml(yield ~ Nitrogen + Variety + Nitrogen:Variety,                     random = ~ Blocks + Blocks:Wplots,                     residual = ~ units,                     data = asreml::oats)  wald(model.asr) #Nitrogen main effect significant  #Determine ranking and groups according to Tukey's Test pred.out <- multiple_comparisons(model.obj = model.asr, classify = \"Nitrogen\",                     descending = TRUE, decimals = 5)  pred.out  # Example using a box-cox transformation set.seed(42) # See the seed for reproducibility resp <- rnorm(n = 50, 5, 1)^3 trt <- as.factor(sample(rep(LETTERS[1:10], 5), 50)) block <- as.factor(rep(1:5, each = 10)) ex_data <- data.frame(resp, trt, block)  # Change one treatment random values to get significant difference ex_data$resp[ex_data$trt==\"A\"] <- rnorm(n = 5, 7, 1)^3  model.asr <- asreml(resp ~ trt,                     random = ~ block,                     residual = ~ units,                     data = ex_data)  resplot(model.asr)  # Perform Box-Cox transformation and get maximum value out <- MASS::boxcox(ex_data$resp~ex_data$trt) out$x[which.max(out$y)] # 0.3838  # Fit cube root to the data model.asr <- asreml(resp^(1/3) ~ trt,                     random = ~ block,                     residual = ~ units,                     data = ex_data) resplot(model.asr) # residual plots look much better  #Determine ranking and groups according to Tukey's Test pred.out <- multiple_comparisons(model.obj = model.asr,                                  classify = \"trt\",                                  trans = \"power\", power = (1/3))  pred.out autoplot(pred.out) } # }"},{"path":"https://biometryhub.github.io/biometryassist/reference/newer_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare installed version of ASReml-R with available versions — newer_version","title":"Compare installed version of ASReml-R with available versions — newer_version","text":"Compare installed version ASReml-R available versions","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/newer_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare installed version of ASReml-R with available versions — newer_version","text":"","code":"newer_version()"},{"path":"https://biometryhub.github.io/biometryassist/reference/newer_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare installed version of ASReml-R with available versions — newer_version","text":"TRUE newer version available online, FALSE otherwise","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Predictions for Statistical Models — predictions","title":"Get Predictions for Statistical Models — predictions","text":"generic function get predictions statistical models.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Predictions for Statistical Models — predictions","text":"","code":"get_predictions(model.obj, classify, pred.obj = NULL, vars = NULL, ...)  # S3 method for class 'asreml' get_predictions(model.obj, classify, pred.obj = NULL, vars = NULL, ...)  # S3 method for class 'lm' get_predictions(model.obj, classify, ...)  # S3 method for class 'lmerMod' get_predictions(model.obj, classify, ...)  # S3 method for class 'lmerModLmerTest' get_predictions(model.obj, classify, ...)"},{"path":"https://biometryhub.github.io/biometryassist/reference/predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Predictions for Statistical Models — predictions","text":"model.obj mixed-effects model object (lmerMod lmerModLmerTest). classify Name predictor variable string. pred.obj Optional precomputed prediction object. vars Variables used model. ... Additional arguments passed emmeans::emmeans.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Predictions for Statistical Models — predictions","text":"list containing predictions, standard errors, degrees freedom, response variable label, aliased names. list containing predictions, standard errors, degrees freedom, response variable label, aliased names. list containing predictions, standard errors, degrees freedom, response variable label, aliased names. list containing predictions, standard errors, degrees freedom, response variable label, aliased names.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/print.mct.html","id":null,"dir":"Reference","previous_headings":"","what":"Print output of multiple_comparisons — print.mct","title":"Print output of multiple_comparisons — print.mct","text":"Print output multiple_comparisons","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/print.mct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print output of multiple_comparisons — print.mct","text":"","code":"# S3 method for class 'mct' print(x, ...)"},{"path":"https://biometryhub.github.io/biometryassist/reference/print.mct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print output of multiple_comparisons — print.mct","text":"x mct object print console. ... arguments","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/print.mct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print output of multiple_comparisons — print.mct","text":"original object invisibly.","code":""},{"path":[]},{"path":"https://biometryhub.github.io/biometryassist/reference/print.mct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print output of multiple_comparisons — print.mct","text":"","code":"dat.aov <- aov(Petal.Width ~ Species, data = iris) output <- multiple_comparisons(dat.aov, classify = \"Species\") print(output) #>      Species predicted.value std.error  df groups   ci  low   up #> 1     setosa            0.25      0.03 147      a 0.05 0.20 0.29 #> 2 versicolor            1.33      0.03 147      b 0.05 1.28 1.37 #> 3  virginica            2.03      0.03 147      c 0.05 1.98 2.07"},{"path":"https://biometryhub.github.io/biometryassist/reference/process_aliased.html","id":null,"dir":"Reference","previous_headings":"","what":"Process aliased treatments in predictions — process_aliased","title":"Process aliased treatments in predictions — process_aliased","text":"Process aliased treatments predictions","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/process_aliased.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process aliased treatments in predictions — process_aliased","text":"","code":"process_aliased(   pp,   sed,   classify,   exclude_cols = c(\"predicted.value\", \"std.error\", \"df\", \"Names\") )"},{"path":"https://biometryhub.github.io/biometryassist/reference/process_aliased.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process aliased treatments in predictions — process_aliased","text":"pp Data frame predictions sed Standard error differences matrix classify Name predictor variable exclude_cols Column names exclude processing aliased names","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/process_aliased.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process aliased treatments in predictions — process_aliased","text":"List containing processed predictions, sed matrix aliased names","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/quiet.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to suppress output if desired, especially useful for ASReml output — quiet","title":"Function to suppress output if desired, especially useful for ASReml output — quiet","text":"Function suppress output desired, especially useful ASReml output","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/quiet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to suppress output if desired, especially useful for ASReml output — quiet","text":"","code":"quiet(x)"},{"path":"https://biometryhub.github.io/biometryassist/reference/quiet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to suppress output if desired, especially useful for ASReml output — quiet","text":"x function call output suppressed.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/quiet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to suppress output if desired, especially useful for ASReml output — quiet","text":"invisible output function called.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/resplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce residual plots of linear models — resplot","title":"Produce residual plots of linear models — resplot","text":"Produces plots residuals assumption checking linear (mixed) models.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/resplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce residual plots of linear models — resplot","text":"","code":"resplot(   model.obj,   shapiro = TRUE,   call = FALSE,   label.size = 10,   axes.size = 10,   call.size = 9,   mod.obj )"},{"path":"https://biometryhub.github.io/biometryassist/reference/resplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce residual plots of linear models — resplot","text":"model.obj aov, lm, lme (nlme::lme()), lmerMod (lme4::lmer()), asreml mmer (sommer) model object. shapiro (Logical) Display Shapiro-Wilk test normality plot? test unreliable larger numbers observations work n >= 5000 omitted plots. call (Logical) Display model call plot? label.size numeric value size label (,B,C) font point size. axes.size numeric value size axes label font size points. call.size numeric value size model displayed plot. mod.obj Deprecated consistent functions. Please use model.obj instead.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/resplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce residual plots of linear models — resplot","text":"ggplot2 object containing diagnostic plots.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/resplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce residual plots of linear models — resplot","text":"","code":"dat.aov <- aov(Petal.Length ~ Petal.Width, data = iris) resplot(dat.aov)  resplot(dat.aov, call = TRUE)"},{"path":"https://biometryhub.github.io/biometryassist/reference/resplt-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Residual plots of linear models. — resplt-deprecated","title":"Residual plots of linear models. — resplt-deprecated","text":"Produces plots residuals assumption checking linear (mixed) models.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/resplt-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residual plots of linear models. — resplt-deprecated","text":"","code":"resplt(model.obj, shapiro = TRUE, call = FALSE, label.size = 10, axes.size = 10, call.size = 9, mod.obj)"},{"path":"https://biometryhub.github.io/biometryassist/reference/resplt-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Residual plots of linear models. — resplt-deprecated","text":"model.obj aov, lm, lme (nlme::lme()), lmerMod (lme4::lmer()), asreml mmer (sommer) model object. shapiro (Logical) Display Shapiro-Wilks test normality plot? call (Logical) Display model call plot? axes.size numeric value size axes label font size points. label.size numeric value size label (,B,C) font point size. call.size numeric value size model displayed plot. mod.obj Deprecated consistent functions. Please use model.obj instead.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/resplt-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Residual plots of linear models. — resplt-deprecated","text":"list containing ggplot2 objects diagnostic plots.","code":""},{"path":[]},{"path":"https://biometryhub.github.io/biometryassist/reference/satab.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces a skeletal ANOVA table — satab","title":"Produces a skeletal ANOVA table — satab","text":"Produces skeletal ANOVA table","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/satab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces a skeletal ANOVA table — satab","text":"","code":"satab(design.obj)"},{"path":"https://biometryhub.github.io/biometryassist/reference/satab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produces a skeletal ANOVA table — satab","text":"design.obj modified agricolae design object output des_info.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/satab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produces a skeletal ANOVA table — satab","text":"Prints skeletal ANOVA table console output.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/summary_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise a graphical summary of variables from a data frame — summary_graph","title":"Visualise a graphical summary of variables from a data frame — summary_graph","text":"Variables plotted different ways according number explanatory variables provided input.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/summary_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise a graphical summary of variables from a data frame — summary_graph","text":"","code":"summary_graph(data, response, exp_var, resp_units = \"\")"},{"path":"https://biometryhub.github.io/biometryassist/reference/summary_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise a graphical summary of variables from a data frame — summary_graph","text":"data data frame containing variables plotted. response response variable plot. exp_var explanatory (grouping) variable(s) plot. three can provided. resp_units string providing units display response variable (y) axis. use empty string default axes units default.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/summary_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise a graphical summary of variables from a data frame — summary_graph","text":"ggplot2 plot object","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/summary_graph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualise a graphical summary of variables from a data frame — summary_graph","text":"single explanatory variable, boxplot grouped exp_var produced. two explanatory variables, dot-plot lines connecting mean group produced, first element exp_var used x axis variable, second used colour points. Three explanatory variables produces two, third used facet plot.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/summary_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise a graphical summary of variables from a data frame — summary_graph","text":"","code":"summary_graph(iris, \"Petal.Length\", \"Species\", \"mm\")   # Multiple explanatory variables can be provided as a vector summary_graph(npk, \"yield\", c(\"N\", \"P\"), \"lb/plot\")   summary_graph(npk, \"yield\", c(\"N\", \"P\", \"K\"), \"lb/plot\")"},{"path":"https://biometryhub.github.io/biometryassist/reference/vario_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the variogram data frame for a model — vario_df","title":"Calculate the variogram data frame for a model — vario_df","text":"Calculate variogram data frame model","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/vario_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the variogram data frame for a model — vario_df","text":"","code":"vario_df(model.obj, Row = NA, Column = NA)"},{"path":"https://biometryhub.github.io/biometryassist/reference/vario_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the variogram data frame for a model — vario_df","text":"model.obj asreml model","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/vario_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the variogram data frame for a model — vario_df","text":"data frame variogram model. data frame contains spatial coordinates (typically row column), gamma position number points separation.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/vario_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the variogram data frame for a model — vario_df","text":"","code":"if (FALSE) { # \\dontrun{ library(asreml) oats <- asreml::oats oats <- oats[order(oats$Row, oats$Column),] model.asr <- asreml(yield ~ Nitrogen + Variety + Nitrogen:Variety,                     random = ~ Blocks + Blocks:Wplots,                     residual = ~ ar1(Row):ar1(Column),                     data = oats) vario_df(model.asr) } # }"},{"path":"https://biometryhub.github.io/biometryassist/reference/variogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Display variogram plots for spatial models — variogram","title":"Display variogram plots for spatial models — variogram","text":"Produces variogram plots checking spatial trends.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/variogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display variogram plots for spatial models — variogram","text":"","code":"variogram(   model.obj,   row = NA,   column = NA,   horizontal = TRUE,   palette = \"default\" )"},{"path":"https://biometryhub.github.io/biometryassist/reference/variogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display variogram plots for spatial models — variogram","text":"model.obj asreml model object. row row variable. column column variable. horizontal Logical (default TRUE). direction plots arranged. default TRUE places plots , FALSE place side side. palette string specifying colour scheme use plotting. default value (\"default\") equivalent \"rainbow\". Colour blind friendly palettes can also provided via options \"colo(u)r blind\" (equivalent \"viridis\"), \"magma\", \"inferno\", \"plasma\", \"cividis\", \"rocket\", \"mako\" \"turbo\". \"Spectral\" palette scales::brewer_pal() also possible.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/variogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display variogram plots for spatial models — variogram","text":"ggplot2 object.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/variogram.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Display variogram plots for spatial models — variogram","text":"S. P. Kaluzny, S. C. Vega, T. P. Cardoso, . . Shelly, \"S+SpatialStats: User’s Manual Windows® UNIX®\" Springer New York, 2013, p. 68, https://books.google.com.au/books?id=iADkBwvario_pointsQBAJ. . R. Gilmour, B. R. Cullis, . P. Verbyla, \"Accounting Natural Extraneous Variation Analysis Field Experiments.\" Journal Agricultural, Biological, Environmental Statistics 2, . 3, 1997, pp. 269–93, https://doi.org/10.2307/1400446.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/variogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display variogram plots for spatial models — variogram","text":"","code":"if (FALSE) { # \\dontrun{ library(asreml) oats <- asreml::oats oats <- oats[order(oats$Row, oats$Column),] model.asr <- asreml(yield ~ Nitrogen + Variety + Nitrogen:Variety,                     random = ~ Blocks + Blocks:Wplots,                     residual = ~ ar1(Row):ar1(Column),                     data = oats) variogram(model.asr) } # }"},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"biometryassist-122","dir":"Changelog","previous_headings":"","what":"biometryassist 1.2.2","title":"biometryassist 1.2.2","text":"CRAN release: 2025-04-23","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"major-changes-1-2-2","dir":"Changelog","previous_headings":"","what":"Major changes","title":"biometryassist 1.2.2","text":"Switched using S3 methods get predictions multiple_comparisons() enable easier expansion different models future. (#92)","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"minor-changes-1-2-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"biometryassist 1.2.2","text":"Added ability produce column plots multiple_comparisons() (#90) Add option multiple_comparisons() disable letter comparisons (#85) Enable custom colour palettes design plots (#84)","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"bug-fixes-1-2-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"biometryassist 1.2.2","text":"Fixed CRAN warnings due changes sommer package (#89) Fixed errors shapiro.test() within resplot() many data points (#87) Fixed bug heat_map() didn’t work properly factor columns (#86) Split-plot design dataframe doesn’t required columns (#82)","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"biometryassist-121","dir":"Changelog","previous_headings":"","what":"biometryassist 1.2.1","title":"biometryassist 1.2.1","text":"CRAN release: 2024-06-05","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"bug-fixes-1-2-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"biometryassist 1.2.1","text":"new summary_graph() function accidentally left CRAN submission.","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"biometryassist-120","dir":"Changelog","previous_headings":"","what":"biometryassist 1.2.0","title":"biometryassist 1.2.0","text":"CRAN release: 2024-05-31","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"major-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"biometryassist 1.2.0","text":"Introduced summary_graph() (#75) heat_map() (#19) functions Enabled arbitrary row, column, block treatment columns provided autoplot.design() function, enable general plotting designs. (#28)","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"minor-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"biometryassist 1.2.0","text":"Implemented ability plot designs buffer plots. (#68) Changed install_asreml() check later version downloading. Enabled non-standard evaluation input column names autoplot.design().","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"biometryassist-113","dir":"Changelog","previous_headings":"","what":"biometryassist 1.1.3","title":"biometryassist 1.1.3","text":"CRAN release: 2023-07-19","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"bug-fixes-1-1-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"biometryassist 1.1.3","text":"Better checking column names data provided multiple_comparisons() prevent breaking. (#53) Updated install_asreml() work ARM chip macOS devices. (#54) Wrote vignette instructions installing ASReml-R. (#55) Fixed variogram enable work dsum models (.e. MET models). (#61)","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"biometryassist-112","dir":"Changelog","previous_headings":"","what":"biometryassist 1.1.2","title":"biometryassist 1.1.2","text":"CRAN release: 2022-11-25","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"bug-fixes-1-1-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"biometryassist 1.1.2","text":"Fixed bug introduced due change names predictmeans(). (#50) Added check missing ar1() component variogram(). (#49) Added error check terms provided wrong order multiple_comparisons() via classify. (#48) Checked model needs present argument passed predict.asreml(). (#41)","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"biometryassist-111","dir":"Changelog","previous_headings":"","what":"biometryassist 1.1.1","title":"biometryassist 1.1.1","text":"CRAN release: 2022-10-27","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"minor-changes-1-1-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"biometryassist 1.1.1","text":"multiple_comparisons() now accepts power transformations automatically back-transforms. gains new argument power provide transformation power applied model undo. enables general Box-Cox transformations. (#36) multiple_comparisons() longer produces error trans argument supplied offset . now produces warning sets offset 0 provided. (#37) Added option turn start message version check. Add options(biometryassist.check = FALSE) .Rprofile file disable. Partially fixes #6. Enabled new colour-blind friendly palettes (#39)","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"bug-fixes-1-1-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"biometryassist 1.1.1","text":"Updated required version rlang (>=1.0.0) Fixed bug didn’t allow labels x axis rotated independently autoplot.mct() (#35) Fixed issue treatment columns determined correctly multiple_comparisons() (#33) Fixed problem variograms displaying grey values NAs produced. (#24 #25) Fixed warnings introduced forthcoming version ggplot2 (#42)","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"biometryassist-110","dir":"Changelog","previous_headings":"","what":"biometryassist 1.1.0","title":"biometryassist 1.1.0","text":"CRAN release: 2022-04-14","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"major-changes-1-1-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"biometryassist 1.1.0","text":"multiple_comparisons() longer requires calls predict.asreml() passed function, predicted values now calculated internally. Additional arguments can passed predict.asreml() via ... argument. (#27)","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"minor-changes-1-1-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"biometryassist 1.1.0","text":"order argument multiple_comparisons() deprecated favour new argument descending. takes logical (TRUE FALSE) values , default longer possible producing incorrect results. (#8) resplt() deprecated favour resplot() removed future version (#20). Warnings lack convergence longer output logl_test(). (#17)","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"bug-fixes-1-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"biometryassist 1.1.0","text":"Aliased levels printed properly multiple_comparisons() now. (#14) R.param G.param removed asreml() call resplot() explicitly provided. (#21) Fixed bug install_asreml() work macOS Monterey. (#16)","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"biometryassist-100","dir":"Changelog","previous_headings":"","what":"biometryassist 1.0.0","title":"biometryassist 1.0.0","text":"CRAN release: 2022-01-28","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"minor-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"biometryassist 1.0.0","text":"mct.() renamed multiple_comparisons() logl.test() renamed logl_test() des.info() renamed des_info()","code":""},{"path":"https://biometryhub.github.io/biometryassist/news/index.html","id":"previous-versions-1-0-0","dir":"Changelog","previous_headings":"","what":"Previous versions","title":"biometryassist 1.0.0","text":"changes prior biometryassist 1.0.0 see BiometryTraining package https://biometryhub.github.io/BiometryTraining/news/index.html.","code":""}]

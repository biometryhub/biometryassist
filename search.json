[{"path":"https://biometryhub.github.io/biometryassist/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 University Adelaide Biometry Hub Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://biometryhub.github.io/biometryassist/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sharon Nielsen. Author. Sam Rogers. Author, maintainer. Annie Conway. Author. University Adelaide. Copyright holder, funder.            https://adelaide.edu.au/ Grains Research Development Corporation. Copyright holder, funder.            https://grdc.com.au/","code":""},{"path":"https://biometryhub.github.io/biometryassist/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nielsen S, Rogers S, Conway (2022). biometryassist: Functions Assist Design Analysis Agronomic Experiments. R package version 1.0.0, https://biometryhub.github.io/biometryassist/.","code":"@Manual{,   title = {biometryassist: Functions to Assist Design and Analysis of Agronomic Experiments},   author = {Sharon Nielsen and Sam Rogers and Annie Conway},   year = {2022},   note = {R package version 1.0.0},   url = {https://biometryhub.github.io/biometryassist/}, }"},{"path":"https://biometryhub.github.io/biometryassist/index.html","id":"biometryassist","dir":"","previous_headings":"","what":"Functions to Assist Design and Analysis of Agronomic Experiments","title":"Functions to Assist Design and Analysis of Agronomic Experiments","text":"goal biometryassist provide functions aid Design Analysis Agronomic-style experiments easy access documentation helper functions, especially teaching concepts. package renamed version BiometryTraining longer maintained, can still found https://biometryhub.github.io/BiometryTraining/","code":""},{"path":"https://biometryhub.github.io/biometryassist/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions to Assist Design and Analysis of Agronomic Experiments","text":"Use following code install package:","code":"if(!require(\"remotes\")) install.packages(\"remotes\")  remotes::install_github(\"biometryhub/biometryassist\", upgrade = FALSE)"},{"path":"https://biometryhub.github.io/biometryassist/index.html","id":"using-the-package","dir":"","previous_headings":"","what":"Using the package","title":"Functions to Assist Design and Analysis of Agronomic Experiments","text":"Load package start using : find pacakge useful, please cite ! Type citation(\"biometryassist\") R console find .","code":"library(biometryassist)"},{"path":"https://biometryhub.github.io/biometryassist/index.html","id":"troubleshooting-installation","dir":"","previous_headings":"","what":"Troubleshooting Installation","title":"Functions to Assist Design and Analysis of Agronomic Experiments","text":"latest version already installed, get response like: Skipping install ‘biometryassist’ github remote, SHA1 (e034b603) changed since last install. Use force = TRUE force installation following warning messages can usually ignored: WARNING: Rtools required build R packages, currently installed. Please download install Rtools custom https://cran.r-project.org/bin/windows/Rtools/. Warning messages: 1: untar2(tarfile, files, list, exdir) : skipping pax global extended headers 2: untar2(tarfile, files, list, exdir) : skipping pax global extended headers receive error package install rlang another package upgraded, easiest way deal uninstall package(s) updated (remove.packages(\"rlang\")). reinstall install.packages(\"rlang\") try installing biometryassist .","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/autoplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/autoplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Objects exported from other packages — reexports","text":"","code":"# S3 method for mct autoplot(object, rotation = 0, size = 4, label_height = 0.1, ...)  # S3 method for design autoplot(   object,   rotation = 0,   size = 4,   margin = FALSE,   palette = \"default\",   ... )"},{"path":"https://biometryhub.github.io/biometryassist/reference/autoplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objects exported from other packages — reexports","text":"object object create plot . Currently objects multiple_comparisons() design() functions class \"mct\" \"design\" respectively supported. rotation Rotate text output Treatments within plot. Allows easier reading long treatment labels. Number 0 360 (inclusive) - default 0 size Increase decrease text size within plot treatment labels. Numeric default value 4. label_height Height text labels upper error bar plot. Default 0.1 (10%) difference upper lower error bars top error bar. ... arguments passed . margin Logical (default FALSE). value FALSE expand plot edges plotting area .e. remove white space plot axes. palette string specifying colour scheme use plotting. Default equivalent \"Spectral\". Colour blind friendly palettes can also provided via options \"colour blind\" (\"color blind\", equivalent \"viridis\"), \"magma\", \"inferno\", \"plasma\" \"cividis\". palettes scales::brewer_pal() also possible.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/autoplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"ggplot2 object.","code":""},{"path":[]},{"path":"https://biometryhub.github.io/biometryassist/reference/autoplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"dat.aov <- aov(Petal.Width ~ Species, data = iris) output <- multiple_comparisons(dat.aov, classify = \"Species\") autoplot(output, label_height = 0.5)  des.out <- design(type = \"crd\", treatments = c(1, 5, 10, 20),                   reps = 5, nrows = 4, ncols = 5, seed = 42, plot = FALSE) #> Source of Variation                     df #>  ============================================= #>  treatments                              3 #>  Residual                                16 #>  ============================================= #>  Total                                   19 autoplot(des.out)   # Colour blind friendly colours autoplot(des.out, palette = \"colour-blind\")   # Alternative colour scheme autoplot(des.out, palette = \"plasma\")"},{"path":"https://biometryhub.github.io/biometryassist/reference/biometryassist-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package biometryassist. — biometryassist-deprecated","title":"Deprecated functions in package biometryassist. — biometryassist-deprecated","text":"functions listed deprecated removed future. possible, alternative functions similar functionality also mentioned. Help pages deprecated functions available help(\"<function>-deprecated\").","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/biometryassist-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated functions in package biometryassist. — biometryassist-deprecated","text":"return value.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/biometryassist.html","id":null,"dir":"Reference","previous_headings":"","what":"biometryassist: Functions to Assist Design and Analysis of Agronomic Experiments — biometryassist","title":"biometryassist: Functions to Assist Design and Analysis of Agronomic Experiments — biometryassist","text":"Provides functions aid design analysis agronomic agricultural experiments easy access documentation helper functions, especially users learning concepts.","code":""},{"path":[]},{"path":"https://biometryhub.github.io/biometryassist/reference/biometryassist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"biometryassist: Functions to Assist Design and Analysis of Agronomic Experiments — biometryassist","text":"Maintainer: Sam Rogers biometrytraining@adelaide.edu.au Authors: Sharon Nielsen biometrytraining@adelaide.edu.au Annie Conway biometrytraining@adelaide.edu.au contributors: University Adelaide (https://adelaide.edu.au/) [copyright holder, funder] Grains Research Development Corporation (https://grdc.com.au/) [copyright holder, funder]","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/des_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces graph of design layout, skeletal ANOVA table and data frame with complete design — des_info","title":"Produces graph of design layout, skeletal ANOVA table and data frame with complete design — des_info","text":"Produces graph design layout, skeletal ANOVA table data frame complete design","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/des_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces graph of design layout, skeletal ANOVA table and data frame with complete design — des_info","text":"","code":"des_info(   design.obj,   nrows,   ncols,   brows = NA,   bcols = NA,   byrow = TRUE,   fac.names = NULL,   fac.sep = c(\"\", \" \"),   plot = TRUE,   rotation = 0,   size = 4,   margin = FALSE,   save = FALSE,   savename = paste0(design.obj$parameters$design, \"_design\"),   plottype = \"pdf\",   return.seed = TRUE,   quiet = FALSE,   ... )"},{"path":"https://biometryhub.github.io/biometryassist/reference/des_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produces graph of design layout, skeletal ANOVA table and data frame with complete design — des_info","text":"design.obj agricolae design object. nrows number rows design. ncols number columns design. brows RCBD . number rows block. bcols RCBD . number columns block. byrow split-plot . Logical (default: TRUE). Provides way arrange plots within whole-plots multiple possible arrangements. fac.names Allows renaming level factorial designs (.e. using agricolae::design.ab()) passing (optionally named) vectors new labels applied factors within list. See examples details information. fac.sep separator used fac.names. Used combine factorial design levels. vector 2 levels supplied, first separates factor levels label, second separates different factors. plot Logical (default TRUE). TRUE, display plot generated design. plot can always produced later using autoplot(). rotation Rotate text output Treatments within plot. Allows easier reading long treatment labels. Takes positive negative values number degrees rotation horizontal. size Increase decrease text size within plot treatment labels. Numeric default value 4. margin Logical (default FALSE). Expand plot edges plotting area .e. remove white space plot axes. save One FALSE (default)/\"none\", TRUE/\"\", \"plot\" \"workbook\". Specifies output save. savename filename design saved . Default type design combined \"_design\". plottype type file save plot . Usually one \"pdf\", \"png\", \"jpg\". See ggplot2::ggsave() possible options. return.seed Logical (default TRUE). Output seed used design? quiet Logical (default FALSE). Return objects without printing output. ... Additional parameters passed ggplot2::ggsave() saving plot.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/des_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produces graph of design layout, skeletal ANOVA table and data frame with complete design — des_info","text":"list containing data frame complete design, ggplot object plot layout, seed (return.seed = TRUE), satab object, allowing repeat output satab table via cat(output$satab).","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/des_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Produces graph of design layout, skeletal ANOVA table and data frame with complete design — des_info","text":"save = TRUE (\"\"), plot workbook saved current working directory, filename given savename. one either \"plot\" \"workbook\" specified, output saved. save = FALSE (default, equivalently \"none\"), nothing output. fac.names can supplied provide intuitive names factors levels factorial designs. specified list format, example fac.names = list(A_names = c(\"\", \"b\", \"c\"), B_names = c(\"x\", \"y\", \"z\")). result design output column named A_names levels , b, c another named B_names levels x, y, z. first two elements list used. fac.sep single element (e.g. \"\"), used separate factor labels (e.g. A_1_B_1). two elements (e.g. c(\"\", \"\")), first element separates factor names levels, second level separates two factors (e.g. A1_B1). ... allows extra arguments passed ggsave output plot. details possible arguments can found  ggplot2::ggsave().","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/des_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produces graph of design layout, skeletal ANOVA table and data frame with complete design — des_info","text":"","code":"library(agricolae)  # Completely Randomised Design trt <- c(1, 5, 10, 20) rep <- 5 outdesign <- design.crd(trt = trt, r = rep, seed = 42) des.out <- des_info(design.obj = outdesign, nrows = 4, ncols = 5) #> Source of Variation                     df #>  ============================================= #>  trt                                     3 #>  Residual                                16 #>  ============================================= #>  Total                                   19   # Randomised Complete Block Design trt <- LETTERS[1:11] rep <- 4 outdesign <- design.rcbd(trt = trt, r = rep, seed = 42) des.out <- des_info(   design.obj = outdesign, nrows = 11,   ncols = 4, brows = 11, bcols = 1 ) #> Source of Variation                     df #>  ============================================= #>  Block stratum                           3 #>  --------------------------------------------- #>  trt                                     10 #>  Residual                                30 #>  ============================================= #>  Total                                   43   # Latin Square Design trt <- c(\"S1\", \"S2\", \"S3\", \"S4\") outdesign <- design.lsd(trt) des.out <- des_info(design.obj = outdesign, nrows = 4, ncols = 4) #> Source of Variation                     df #>  ============================================= #>  Row                                     3 #>  Column                                  3 #>  trt                                     3 #>  Residual                                6 #>  ============================================= #>  Total                                   15   # Factorial Design (Crossed, Completely Randomised) trt <- c(3, 2) # Factorial 3 x 2 rep <- 3 outdesign <- design.ab(trt, r = rep, design = \"crd\") des.out <- des_info(design.obj = outdesign, nrows = 6, ncols = 3) #> Source of Variation                     df #>  ============================================= #>  A                                       2 #>  B                                       1 #>  A:B                                     2 #>  Residual                                12 #>  ============================================= #>  Total                                   17   # Factorial Design (Crossed, Completely Randomised), renaming factors trt <- c(3, 2) # Factorial 3 x 2 rep <- 3 outdesign <- design.ab(trt, r = rep, design = \"crd\") des.out <- des_info(design.obj = outdesign, nrows = 6, ncols = 3,                     fac.names = list(N = c(50, 100, 150),                                      Water = c(\"Irrigated\", \"Rain-fed\"))) #> Source of Variation                     df #>  ============================================= #>  N                                       2 #>  Water                                   1 #>  N:Water                                 2 #>  Residual                                12 #>  ============================================= #>  Total                                   17   # Factorial Design (Nested, Latin Square) trt <- c(\"A1\", \"A2\", \"A3\", \"A4\", \"B1\", \"B2\", \"B3\") outdesign <- design.lsd(trt) des.out <- des_info(design.obj = outdesign, nrows = 7, ncols = 7) #> Source of Variation                     df #>  ============================================= #>  Row                                     6 #>  Column                                  6 #>  trt                                     6 #>  Residual                                30 #>  ============================================= #>  Total                                   48   # Split plot design trt1 <- c(\"A\", \"B\") trt2 <- 1:4 rep <- 4 outdesign <- design.split(trt1, trt2, r = rep) des.out <- des_info(design.obj = outdesign, nrows = 8, ncols = 4, brows = 4, bcols = 2) #> Source of Variation                          df #>  ================================================== #>  Block stratum                                3 #>  -------------------------------------------------- #>  Whole plot stratum #>           trt1                                1 #>  Whole plot Residual                          3 #>  ================================================== #>  Subplot stratum #>           trt2                                3 #>           trt1:trt2                           3 #>           Subplot Residual                   18 #>  ================================================== #>  Total                                       31"},{"path":"https://biometryhub.github.io/biometryassist/reference/design.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces an experimental design with graph of design layout and skeletal ANOVA table — design","title":"Produces an experimental design with graph of design layout and skeletal ANOVA table — design","text":"Produces experimental design graph design layout skeletal ANOVA table","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces an experimental design with graph of design layout and skeletal ANOVA table — design","text":"","code":"design(   type,   treatments,   reps,   nrows,   ncols,   brows = NA,   bcols = NA,   byrow = TRUE,   sub_treatments = NULL,   fac.names = NULL,   fac.sep = c(\"\", \" \"),   plot = TRUE,   rotation = 0,   size = 4,   margin = FALSE,   save = FALSE,   savename = paste0(type, \"_design\"),   plottype = \"pdf\",   seed = TRUE,   quiet = FALSE,   ... )"},{"path":"https://biometryhub.github.io/biometryassist/reference/design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produces an experimental design with graph of design layout and skeletal ANOVA table — design","text":"type type design. Supported design types crd, rcbd, lsd, crossed:<type> <type> one previous types split. See Details information. treatments vector containing treatment names labels. reps number replicates. required Latin Squared Designs. nrows number rows design. ncols number columns design. brows RCBD Split Plot designs. number rows block. bcols RCBD Split Plot designs. number columns block. byrow split-plot . Logical (default TRUE). Provides way arrange plots within whole-plots multiple possible arrangements. sub_treatments vector treatments subplots split plot design. fac.names Allows renaming level factorial designs (.e. using agricolae::design.ab()) passing (optionally named) vectors new labels applied factors within list. See examples details information. fac.sep separator used fac.names. Used combine factorial design levels. vector 2 levels supplied, first separates factor levels label, second separates different factors. plot Logical (default TRUE). TRUE, display plot generated design. plot can always produced later using autoplot(). rotation Rotate text output Treatments within plot. Allows easier reading long treatment labels. Takes positive negative values number degrees rotation horizontal. size Increase decrease text size within plot treatment labels. Numeric default value 4. margin Logical (default FALSE). Expand plot edges plotting area .e. remove white space plot axes. save One FALSE (default)/\"none\", TRUE/\"\", \"plot\" \"workbook\". Specifies output save. savename filename design saved . Default type design combined \"_design\". plottype type file save plot . Usually one \"pdf\", \"png\", \"jpg\". See ggplot2::ggsave() possible options. seed Logical (default TRUE). TRUE, return seed used generate design. numeric value, use value seed design. quiet Logical (default FALSE). Hide output. ... Additional parameters passed ggplot2::ggsave() saving plot.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produces an experimental design with graph of design layout and skeletal ANOVA table — design","text":"list containing data frame complete design, ggplot object plot layout, seed (return.seed = TRUE), satab object, allowing repeat output satab table via cat(output$satab).","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/design.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Produces an experimental design with graph of design layout and skeletal ANOVA table — design","text":"designs currently supported type Completely Randomised designs (crd), Randomised Complete Block designs (rcbd), Latin Square Designs (lsd), Factorial crossed structure (use crossed:<type> <type> one previous types e.g. crossed:crd) Split Plot designs (split). Nested factorial designs supported manual setup, see Examples. save = TRUE (\"\"), plot workbook saved current working directory, filename given savename. one either \"plot\" \"workbook\" specified, output saved. save = FALSE (default, equivalently \"none\"), nothing output. fac.names can supplied provide intuitive names factors levels factorial split plot designs. can specified list format, example fac.names = list(A_names = c(\"\", \"b\", \"c\"), B_names = c(\"x\", \"y\", \"z\")). result design output column named A_names levels , b, c another named B_names levels x, y, z. Labels can also supplied character vector (e.g. c(\"\", \"B\")) result treatment column names renamed. first two elements list used, except case 3-way factorial design. ... allows extra arguments passed ggsave output plot. details possible arguments can found  ggplot2::ggsave().","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produces an experimental design with graph of design layout and skeletal ANOVA table — design","text":"","code":"# Completely Randomised Design des.out <- design(type = \"crd\", treatments = c(1, 5, 10, 20),                   reps = 5, nrows = 4, ncols = 5, seed = 42) #> Source of Variation                     df #>  ============================================= #>  treatments                              3 #>  Residual                                16 #>  ============================================= #>  Total                                   19   # Randomised Complete Block Design des.out <- design(\"rcbd\", treatments = LETTERS[1:11], reps = 4,                   nrows = 11, ncols = 4, brows = 11, bcols = 1, seed = 42) #> Source of Variation                     df #>  ============================================= #>  Block stratum                           3 #>  --------------------------------------------- #>  treatments                              10 #>  Residual                                30 #>  ============================================= #>  Total                                   43   # Latin Square Design # Doesn't require reps argument des.out <- design(type = \"lsd\", c(\"S1\", \"S2\", \"S3\", \"S4\"),                   nrows = 4, ncols = 4, seed = 42) #> Source of Variation                     df #>  ============================================= #>  Row                                     3 #>  Column                                  3 #>  treatments                              3 #>  Residual                                6 #>  ============================================= #>  Total                                   15   # Factorial Design (Crossed, Completely Randomised) des.out <- design(type = \"crossed:crd\", treatments = c(3, 2),                   reps = 3, nrows = 6, ncols = 3, seed = 42) #> Source of Variation                     df #>  ============================================= #>  A                                       2 #>  B                                       1 #>  A:B                                     2 #>  Residual                                12 #>  ============================================= #>  Total                                   17   # Factorial Design (Crossed, Completely Randomised), renaming factors des.out <- design(type = \"crossed:crd\", treatments = c(3, 2),                   reps = 3, nrows = 6, ncols = 3, seed = 42,                   fac.names = list(N = c(50, 100, 150),                                    Water = c(\"Irrigated\", \"Rain-fed\"))) #> Source of Variation                     df #>  ============================================= #>  N                                       2 #>  Water                                   1 #>  N:Water                                 2 #>  Residual                                12 #>  ============================================= #>  Total                                   17   # Factorial Design (Crossed, Randomised Complete Block Design), changing separation between factors des.out <- design(type = \"crossed:rcbd\", treatments = c(3, 2),                   reps = 3, nrows = 6, ncols = 3,                   brows = 6, bcols = 1,                   seed = 42, fac.sep = c(\":\", \"_\")) #> Source of Variation                     df #>  ============================================= #>  Block stratum                           2 #>  --------------------------------------------- #>  A                                       2 #>  B                                       1 #>  A:B                                     2 #>  Residual                                10 #>  ============================================= #>  Total                                   17   # Factorial Design (Nested, Latin Square) des.out <- design(type = \"lsd\", treatments = c(\"A1\", \"A2\", \"A3\", \"A4\", \"B1\", \"B2\", \"B3\"),                   nrows = 7, ncols = 7, seed = 42) #> Source of Variation                     df #>  ============================================= #>  Row                                     6 #>  Column                                  6 #>  treatments                              6 #>  Residual                                30 #>  ============================================= #>  Total                                   48   # Split plot design des.out <- design(type = \"split\", treatments = c(\"A\", \"B\"), sub_treatments = 1:4,                   reps = 4, nrows = 8, ncols = 4, brows = 4, bcols = 2, seed = 42) #> Source of Variation                          df #>  ================================================== #>  Block stratum                                3 #>  -------------------------------------------------- #>  Whole plot stratum #>           treatments                          1 #>  Whole plot Residual                          3 #>  ================================================== #>  Subplot stratum #>           sub_treatments                      3 #>           treatments:sub_treatments           3 #>           Subplot Residual                   18 #>  ================================================== #>  Total                                       31   # Alternative arangement of the same design as above des.out <- design(type = \"split\", treatments = c(\"A\", \"B\"), sub_treatments = 1:4,                   reps = 4, nrows = 8, ncols = 4, brows = 4, bcols = 2,                   byrow = FALSE, seed = 42) #> Source of Variation                          df #>  ================================================== #>  Block stratum                                3 #>  -------------------------------------------------- #>  Whole plot stratum #>           treatments                          1 #>  Whole plot Residual                          3 #>  ================================================== #>  Subplot stratum #>           sub_treatments                      3 #>           treatments:sub_treatments           3 #>           Subplot Residual                   18 #>  ================================================== #>  Total                                       31"},{"path":"https://biometryhub.github.io/biometryassist/reference/install_asreml.html","id":null,"dir":"Reference","previous_headings":"","what":"Install or Update the ASReml-R package — install_asreml","title":"Install or Update the ASReml-R package — install_asreml","text":"Helper functions installing updating ASReml-R package, intended reduce difficulty finding correct version operating system R version.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/install_asreml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install or Update the ASReml-R package — install_asreml","text":"","code":"install_asreml(   library = .libPaths()[1],   quiet = FALSE,   force = FALSE,   keep_file = FALSE )  update_asreml(...)"},{"path":"https://biometryhub.github.io/biometryassist/reference/install_asreml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install or Update the ASReml-R package — install_asreml","text":"library Library location install ASReml-R. Uses first option .libPaths() default. quiet Logical (default FALSE). package installed quietly? force Logical (default FALSE). Force ASReml-R install. Useful upgrading already installed. keep_file downloaded asreml package file kept? Default FALSE. TRUE downloads current directory. file path can also provided save another directory. See Details information. ... arguments passed install_asreml()","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/install_asreml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install or Update the ASReml-R package — install_asreml","text":"Silently returns TRUE asreml installed successfully already present, FALSE otherwise. Optionally prints confirmation message success.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/install_asreml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install or Update the ASReml-R package — install_asreml","text":"ASReml-R package file downloaded shortlink, keep_file TRUE, package archive file saved current directory. valid path provided keep_file, file saved path, directory assumed exist created. keep_file specify existing, valid path, error shown.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/install_asreml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install or Update the ASReml-R package — install_asreml","text":"","code":"if (FALSE) { # Example 1: download and install asreml install_asreml()  # Example 2: install asreml and save file for later install_asreml(keep_file = TRUE) }"},{"path":"https://biometryhub.github.io/biometryassist/reference/logl_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-likelihood test for comparing terms in ASReml-R models — logl_test","title":"Log-likelihood test for comparing terms in ASReml-R models — logl_test","text":"Log-likelihood test comparing terms ASReml-R models","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/logl_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-likelihood test for comparing terms in ASReml-R models — logl_test","text":"","code":"logl_test(   model.obj,   rand.terms = NULL,   resid.terms = NULL,   decimals = 3,   numeric = FALSE,   quiet = FALSE )"},{"path":"https://biometryhub.github.io/biometryassist/reference/logl_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-likelihood test for comparing terms in ASReml-R models — logl_test","text":"model.obj ASReml-R model object rand.terms Random terms model. Default NULL. resid.terms Residual terms model. Default NULL. decimals Controls rounding decimal places output. Default 3 decimal places. numeric Return p-values numeric? Default characters, small values shown less small number. See details . quiet Logical (default: FALSE). Hide warnings messages?","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/logl_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-likelihood test for comparing terms in ASReml-R models — logl_test","text":"dataframe containing results test.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/logl_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log-likelihood test for comparing terms in ASReml-R models — logl_test","text":"Typically p-values 0, usually just threshold accuracy calculation probability.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/logl_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-likelihood test for comparing terms in ASReml-R models — logl_test","text":"","code":"if (FALSE) { library(asreml) dat <- asreml::oats dat <- dat[order(dat$Row, dat$Column),]  #Fit ASReml Model model.asr <- asreml(yield ~ Nitrogen + Variety + Nitrogen:Variety,                     random = ~ Blocks + Blocks:Wplots,                     residual = ~ ar1(Row):ar1(Column),                     data = dat) oats.logl <- logl_test(   model.obj = model.asr, rand.terms = c(\"Blocks\", \"Blocks:Wplots\"),   resid.terms = c(\"ar1(Row)\", \"ar1(Column)\") ) oats.logl }"},{"path":"https://biometryhub.github.io/biometryassist/reference/multiple_comparisons.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple Comparison Tests — multiple_comparisons","title":"Multiple Comparison Tests — multiple_comparisons","text":"function comparing ranking predicted means Tukey's Honest Significant Difference (HSD) Test.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/multiple_comparisons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple Comparison Tests — multiple_comparisons","text":"","code":"multiple_comparisons(   model.obj,   pred.obj,   classify,   sig = 0.05,   int.type = \"ci\",   trans = NA,   offset = NA,   decimals = 2,   order = \"default\",   plot = FALSE,   label_height = 0.1,   rotation = 0,   save = FALSE,   savename = \"predicted_values\",   pred )"},{"path":"https://biometryhub.github.io/biometryassist/reference/multiple_comparisons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple Comparison Tests — multiple_comparisons","text":"model.obj ASReml-R aov model object. likely also work lme (nlme::lme()), lmerMod (lme4::lmer()) models well. pred.obj ASReml-R prediction object sed = TRUE. required models, set NA. classify Name predictor variable string. sig significance level, numeric 0 1. Default 0.05. int.type type confidence interval calculate. One ci, 1se 2se. Default ci. trans Transformation applied response variable. One log, sqrt, logit inverse. Default NA. offset Numeric offset applied response variable prior transformation. Default NA. Use 0 offset applied transformed data. See Details information. decimals Controls rounding decimal places output. Default 2 decimal places. order Order letters groups output. Options 'default', 'ascending' 'descending'. Alternative options accepted increasing decreasing. Partial matching text performed, allowing entry 'desc' example. plot Automatically produce plot output multiple comparison test? Default FALSE. maintained backwards compatibility, preferred method now use autoplot(<multiple_comparisons output>). See autoplot.mct() details. label_height Height text labels upper error bar plot. Default 0.1 (10%) difference upper lower error bars top error bar. rotation Rotate text output Treatments within plot. Allows easier reading long treatment labels. Number 0 360 (inclusive) - default 0 save Logical (default FALSE). Save predicted values csv file? savename file name predicted values saved . Default predicted_values. pred Deprecated. Use classify instead.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/multiple_comparisons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple Comparison Tests — multiple_comparisons","text":"list containing data frame predicted means, standard errors, confidence interval upper lower bounds, significant group allocations (named predicted_values), well plot visually displaying predicted values (named predicted_plot). predicted values aliased, warning printed, aliased treatment levels returned output (named aliased).","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/multiple_comparisons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiple Comparison Tests — multiple_comparisons","text":"transformations require data small offset applied, otherwise cause errors (example taking log 0, square root negative values). order correctly reverse offset, trans argument supplied, offset value must also supplied. offset required transformation, use value 0 offset argument.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/multiple_comparisons.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multiple Comparison Tests — multiple_comparisons","text":"Jørgensen, E. & Pedersen, . R. Obtain Nasty Standard Errors Transformed Data - Used. https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.47.9023&rep=rep1&type=pdf","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/multiple_comparisons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple Comparison Tests — multiple_comparisons","text":"","code":"# Fit aov model model <- aov(Petal.Length ~ Species, data = iris)  # Display the ANOVA table for the model anova(model) #> Analysis of Variance Table #>  #> Response: Petal.Length #>            Df Sum Sq Mean Sq F value    Pr(>F)     #> Species     2 437.10 218.551  1180.2 < 2.2e-16 *** #> Residuals 147  27.22   0.185                       #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  # Determine ranking and groups according to Tukey's Test pred.out <- multiple_comparisons(model, classify = \"Species\")  # Display the predicted values table pred.out #>      Species predicted.value std.error  Df groups  ci  low   up #> 1     setosa            1.46      0.06 147      a 0.1 1.36 1.56 #> 2 versicolor            4.26      0.06 147      b 0.1 4.16 4.36 #> 3  virginica            5.55      0.06 147      c 0.1 5.45 5.65  # Show the predicted values plot autoplot(pred.out, label_height = 0.5)     if (FALSE) { # ASReml-R Example library(asreml)  #Fit ASReml Model model.asr <- asreml(yield ~ Nitrogen + Variety + Nitrogen:Variety,                     random = ~ Blocks + Blocks:Wplots,                     residual = ~ units,                     data = asreml::oats)  wald(model.asr) #Nitrogen main effect significant  #Calculate predicted means pred.asr <- predict(model.asr, classify = \"Nitrogen\", sed = TRUE)  #Determine ranking and groups according to Tukey's Test pred.out <- multiple_comparisons(model.obj = model.asr, pred.obj = pred.asr,                     classify = \"Nitrogen\", order = \"descending\", decimals = 5)  pred.out}"},{"path":"https://biometryhub.github.io/biometryassist/reference/print.mct.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for multiple_comparisons — print.mct","title":"Print method for multiple_comparisons — print.mct","text":"Print method multiple_comparisons","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/print.mct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for multiple_comparisons — print.mct","text":"","code":"# S3 method for mct print(x, ...)"},{"path":"https://biometryhub.github.io/biometryassist/reference/print.mct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for multiple_comparisons — print.mct","text":"x mct object print console. ... arguments passed .","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/print.mct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for multiple_comparisons — print.mct","text":"original object invisibly.","code":""},{"path":[]},{"path":"https://biometryhub.github.io/biometryassist/reference/print.mct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for multiple_comparisons — print.mct","text":"","code":"dat.aov <- aov(Petal.Width ~ Species, data = iris) output <- multiple_comparisons(dat.aov, classify = \"Species\") print(output) #>      Species predicted.value std.error  Df groups   ci  low   up #> 1     setosa            0.25      0.03 147      a 0.05 0.20 0.29 #> 2 versicolor            1.33      0.03 147      b 0.05 1.28 1.37 #> 3  virginica            2.03      0.03 147      c 0.05 1.98 2.07"},{"path":"https://biometryhub.github.io/biometryassist/reference/quiet.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to suppress output if desired, especially useful for ASReml output — quiet","title":"Function to suppress output if desired, especially useful for ASReml output — quiet","text":"Function suppress output desired, especially useful ASReml output","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/quiet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to suppress output if desired, especially useful for ASReml output — quiet","text":"","code":"quiet(x)"},{"path":"https://biometryhub.github.io/biometryassist/reference/quiet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to suppress output if desired, especially useful for ASReml output — quiet","text":"x function call output suppressed.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/quiet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to suppress output if desired, especially useful for ASReml output — quiet","text":"invisible output function called.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/resplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Residual plots of linear models. — resplot","title":"Residual plots of linear models. — resplot","text":"Produces plots residuals assumption checking linear (mixed) model.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/resplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residual plots of linear models. — resplot","text":"","code":"resplot(   model.obj,   shapiro = TRUE,   call = FALSE,   label.size = 10,   axes.size = 10,   call.size = 9,   mod.obj )  resplt(   model.obj,   shapiro = TRUE,   call = FALSE,   label.size = 10,   axes.size = 10,   call.size = 9,   mod.obj )"},{"path":"https://biometryhub.github.io/biometryassist/reference/resplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Residual plots of linear models. — resplot","text":"model.obj aov, lm, lme (nlme::lme()), lmerMod (lme4::lmer()), asreml mmer (sommer) model object. shapiro (Logical) Display Shapiro-Wilks test normality plot? call (Logical) Display model call plot? label.size numeric value size label (,B,C) font point size. axes.size numeric value size axes label font size points. call.size numeric value size model displayed plot. mod.obj Deprecated consistent functions. Please use model.obj instead.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/resplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Residual plots of linear models. — resplot","text":"list containing ggplot2 objects diagnostic plots.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/resplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Residual plots of linear models. — resplot","text":"","code":"dat.aov <- aov(Petal.Length ~ Petal.Width, data = iris) resplot(dat.aov)  resplt(dat.aov, call = TRUE)"},{"path":"https://biometryhub.github.io/biometryassist/reference/satab.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces a skeletal ANOVA table — satab","title":"Produces a skeletal ANOVA table — satab","text":"Produces skeletal ANOVA table","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/satab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces a skeletal ANOVA table — satab","text":"","code":"satab(design.obj)"},{"path":"https://biometryhub.github.io/biometryassist/reference/satab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produces a skeletal ANOVA table — satab","text":"design.obj agricolae design object.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/satab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produces a skeletal ANOVA table — satab","text":"Prints skeletal ANOVA table console output.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/vario_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the variogram data frame for a model — vario_df","title":"Calculate the variogram data frame for a model — vario_df","text":"Calculate variogram data frame model","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/vario_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the variogram data frame for a model — vario_df","text":"","code":"vario_df(model.obj, Row, Col)"},{"path":"https://biometryhub.github.io/biometryassist/reference/vario_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the variogram data frame for a model — vario_df","text":"model.obj asreml model","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/vario_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the variogram data frame for a model — vario_df","text":"data frame variogram model. data frame contains spatial coordinates (typically row column), $gamma$ position number points separation.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/vario_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the variogram data frame for a model — vario_df","text":"","code":"if (FALSE) { library(asreml) oats <- asreml::oats oats <- oats[order(oats$Row, oats$Column),] model.asr <- asreml(yield ~ Nitrogen + Variety + Nitrogen:Variety,                     random = ~ Blocks + Blocks:Wplots,                     residual = ~ ar1(Row):ar1(Column),                     data = oats) vario_df(model.asr) }"},{"path":"https://biometryhub.github.io/biometryassist/reference/variogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Variogram plots for spatial models. — variogram","title":"Variogram plots for spatial models. — variogram","text":"Produces variogram plots checking spatial trends.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/variogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variogram plots for spatial models. — variogram","text":"","code":"variogram(   model.obj,   row = NA,   column = NA,   horizontal = TRUE,   palette = \"default\" )"},{"path":"https://biometryhub.github.io/biometryassist/reference/variogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variogram plots for spatial models. — variogram","text":"model.obj asreml model object. row row variable. column column variable. horizontal Logical (default TRUE). direction plots arranged. default TRUE places plots , FALSE place side side. palette string specifying colour scheme use plotting. default value (\"default\") equivalent \"rainbow\". Colour blind friendly palettes can also provided via options \"colour blind\" (\"color blind\", equivalent \"viridis\"), \"magma\", \"inferno\", \"plasma\" \"cividis\". \"Spectral\" palette scales::brewer_pal() also possible.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/variogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variogram plots for spatial models. — variogram","text":"ggplot2 object.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/variogram.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Variogram plots for spatial models. — variogram","text":"S. P. Kaluzny, S. C. Vega, T. P. Cardoso, . . Shelly, \"S+SpatialStats: User’s Manual Windows® UNIX®\" Springer New York, 2013, p. 68, https://books.google.com.au/books?id=iADkBwAAQBAJ. . R. Gilmour, B. R. Cullis, . P. Verbyla, \"Accounting Natural Extraneous Variation Analysis Field Experiments.\" Journal Agricultural, Biological, Environmental Statistics 2, . 3, 1997, pp. 269–93, https://doi.org/10.2307/1400446.","code":""},{"path":"https://biometryhub.github.io/biometryassist/reference/variogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variogram plots for spatial models. — variogram","text":"","code":"if (FALSE) { library(asreml) oats <- asreml::oats oats <- oats[order(oats$Row, oats$Column),] model.asr <- asreml(yield ~ Nitrogen + Variety + Nitrogen:Variety,                     random = ~ Blocks + Blocks:Wplots,                     residual = ~ ar1(Row):ar1(Column),                     data = oats) variogram(model.asr) }"},{"path":[]}]
